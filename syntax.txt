string:
	"\"([^\\\n]|\\.|\\\n)*\""

uinteger:
	"[0-9]+"

integer:
	"(\+|\-)"uinteger

floating:
	integer'.'uinteger

expression:
	string | uinteger | integer | floating

identifier:
	"[a-zA-Z_][0-9a-zA-Z_]*"

primitive-type:
	'u8' | 'u16' | 'u32' | 'u64' |
	'i8' | 'i16' | 'i32' | 'i64' |
		   'f16' | 'f32' | 'f64'

type:
	primitive-type

cast:
	':' type

tagged-tuple:
	'(' identifier cast (',' identifier cast )* ')'

return-type:
	'->' type

function-declaration:
	identifier tagged-tuple return-type

value-declaration:
	identifier cast

statement:
	function-declaration
	value-declaration
	expression
	statement ';'

structure Baz {
	row: usize,
	column: usize
}

function foo(bar: Baz) -> Baz {
	return bar;
}

function create(row: usize, column: usize)
	-> structure Baz {
		row: usize,
		column: usize
	}
{
	return Baz {
		.row = row,
		.column = column
	};
}

value bar: structure Baz {
	row: usize,
	column: usize
} = Baz {
	.row = 32,
	.column = 21
};
