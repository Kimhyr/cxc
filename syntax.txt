string:
	"\"([^\\\n]|\\.|\\\n)*\""

uinteger:
	"[0-9]+"

integer:
	"(\+|\-)"uinteger

floating:
	integer'.'uinteger

expression:
	string | uinteger | integer | floating

identifier:
	"[a-zA-Z_][0-9a-zA-Z_]*"

primitive-type:
	'u8' | 'u16' | 'u32' | 'u64' |
	'i8' | 'i16' | 'i32' | 'i64' |
		   'f16' | 'f32' | 'f64'

type:
	primitive-type

cast:
	':' type

tagged-tuple:
	'(' identifier cast (',' identifier cast )* ')'

function-type:
	tagged-tuple '->' type

procedure-declaration:
	identifier function-type

value-declaration:
	identifier cast

statement:
	procedure-declaration
	value-declaration
	expression
	statement ';'

structure Baz {
	row: usize,
	column: usize
}

procedure foo(bar: Baz) -> Baz {
	return bar;
}

procedure create(row: uint, column: uint)
	-> type Baz = (
		row: uint,
		column: uint
	)
{
	return Baz(
		.row = row,
		.column = column
	);
}

procedure fib(n: uint) -> uint
{
	if n == 1 || n == 2 {
		return n;
	}
	return fib(n - 1) + fib(n - 2);
}

value fib: (n: uint) -> uint {
	(n == 1 || n == 2) => n,
		fib(n - 1) + fib(n - 2)
}
